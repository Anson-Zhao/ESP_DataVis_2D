'use strict';

// nodemailer transport which open an email in the browser instead of sending it
// See README.md for usage.

var path = require('path');
var fs = require('fs-extra');
var nodeOpen = require('open');

function MailBrowserTransport(options) {
  options = options || {};
  this.dir = options.dir || path.join(process.cwd(), 'tmp', 'mailbrowser');
  this.browser = typeof options.browser === 'boolean' ? options.browser : true;
  fs.mkdirpSync(this.dir);
}

MailBrowserTransport.prototype.send = function(mail, callback) {
  callback = callback || function() {};
  process.nextTick(function() { this._process(mail, callback); }.bind(this));
};

MailBrowserTransport.prototype.close = function(callback) {
  if (typeof callback === 'function') {
    callback();
  }
};

MailBrowserTransport.prototype._process = function(mail, callback) {
  var self = this;
  var timestamp = (new Date()).toISOString().replace(/[-:TZ\.]/g, '');
  var directory = path.join(this.dir, timestamp);
  fs.mkdirpSync(directory);
  var filename = path.join(directory, 'mail.html');

  mail.resolveContent(mail.data, 'html', function(err, html) {
    if (err) {
      return callback(err);
    }
    fs.writeFileSync(filename, html, 'utf-8');
    if (self.browser) {
      nodeOpen(filename);
    }

    var responseStatus = {
      messageId: filename,
      message: ''
    };
    callback(null, responseStatus);
  });
};

module.exports = function(options) {
  return new MailBrowserTransport(options);
};
